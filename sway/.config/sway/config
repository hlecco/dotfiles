# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $alt Mod1
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term termite
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu rofi -show run | xargs swaymsg exec --

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

## Input configuration


input "1739:52392:DELL08A6:00_06CB:CCA8_Touchpad" {
    dwt disabled
    tap enabled
    natural_scroll disabled
    middle_emulation enabled
    pointer_accel 0.1
    accel_profile adaptive
    tap_button_map lrm
}


# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

input 9610:42:SINO_WEALTH_Gaming_KB__Keyboard {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 9610:42:SINO_WEALTH_Gaming_KB {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 7847:2311:SEMITEK_USB-HID_Gaming_Keyboard {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 0:0:Kbct-SEMITEK_USB-HID_Gaming_Keyboard {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 7847:2311:SEMITEK_USB-HID_Gaming_Keyboard_Consumer_Control {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 7847:2311:SEMITEK_USB-HID_Gaming_Keyboard {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 7847:2311:SEMITEK_USB-HID_Gaming_Keyboard_System_Control {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 1:1:AT_Translated_Set_2_keyboard {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 0:0:Dell_WMI_hotkeys {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 0:0:Intel_HID_5_button_array {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}

input 0:0:Intel_HID_events {
    xkb_layout "us"
    xkb_variant "intl"
    repeat_rate 90
    repeat_delay 250
}


## Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec new_terminal

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1; workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2; workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3; workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4; workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5; workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6; workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7; workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8; workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9; workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10; workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym $mod+period workspace next_on_output
    bindsym $mod+comma workspace prev_on_output
    bindsym $alt+period workspace next_on_output
    bindsym $alt+comma workspace prev_on_output
    bindsym $mod+Shift+period move container to workspace next_on_output; workspace next_on_output
    bindsym $mod+Shift+comma move container to workspace prev_on_output; workspace prev_on_output

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Rice:
#
#

for_window [class="REAPER"] floating enable
focus_follows_mouse no
font pango:Iosevka Regular 10
 
default_border pixel 3
gaps inner 24
output "*" bg /home/lecco/media/wallpapers/geowall.png fill

# Custom keybindings
bindsym $mod+Control+equal exec /home/lecco/.local/bin/profile-chooser up
bindsym $mod+Control+minus exec /home/lecco/.local/bin/profile-chooser down
bindsym $alt+Control+up exec brightup
bindsym $alt+Control+down exec brightdown
bindsym $mod+Shift+Backspace move workspace to output right
bindsym $mod+Backspace focus output right
bindsym $alt+Control+right exec pactl set-sink-volume 0 +1000
bindsym $alt+Control+left exec pactl set-sink-volume 0 -1000
bindsym Control+$alt+Delete exec wlogout
bindsym $mod+Control+v exec sleep 0.5 && wl-paste | ydotool type --file -
bindsym $mod+p exec drag_clipboard

# Visible on all workspaces
bindsym $mod+m sticky toggle

# Idle
seat * hide_cursor 3000

# theme
set $gnome-schema org.gnome.desktop.interface

exec_always {
    gsettings set $gnome-schema gtk-theme 'oomox-solarized-light'
    gsettings set $gnome-schema icon-theme 'oomox-solarized-light'
    gsettings set $gnome-schema cursor-theme 'Adwaita'
    gsettings set $gnome-schema font-name 'Iosevka Regular'
}

# # colors
# class 		border 	background	text 		indicator 	child_border
client.focused 		#2aa198 #fdf6e3		#586e75 	#2aa198 	#2aa198
client.focused_inactive #eee8d5 #269be2 	#586e75 	#eee8d5 	#eee8d5
client.unfocused 	#eee8d5 #269be2 	#586e75 	#eee8d5 	#eee8d5
client.urgent 		#2aa198 #dc322f 	#586e75 	#2aa198 	#2aa198

client.background       #fdf6e3

#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"
bindsym $mod+o exec termite --name=launcher -e cli-open
for_window [app_id="launcher"] floating enable
for_window [app_id="launcher"] resize set 960 365

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position bottom
    tray_output none

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/swaybar.sh; do sleep 1; done
    colors {
	separator #002b36
        statusline #fdf6e3
        background #073642
        focused_workspace #fdf6e3 #073542 #fdf6e3
        active_workspace #073542 #073542 #fdf6e3
        urgent_workspace #cb4b16 #cb4b16 #002b36
        inactive_workspace #073542 #073542 #839496
        binding_mode #859900 #859900 #002b36
    }
}

# autostart

exec ~/code/scripts/fader.py
include /etc/sway/config.d/*

